---
# yamllint disable rule:line-length
generators:
  go: barney.ci/golang%generator

images:

  internal/bootstrap/extract-floor:
    entry:
      mutables:
        - /var/work
    units:
      - image: barney.ci/alpine%pkg/alpine-base
      - image: barney.ci/alpine%pkg/bash
      - image: barney.ci/alpine%pkg/wget
      - image: barney.ci/alpine%network
      - image: barney.ci/alpine%apk-finalizers
      - build: |
          mkdir -p /dest/var/work
          cp -a bootstrap/extract /dest

  internal/bootstrap/extract:
    no-create-mountpoints: true
    description: |
      Minimal bootstrapping environment used to bootstrap almalinux.

      This needs to be based off of an rpm-based distro,
      we're using CentOS-stream as a suitable tarball and CHECKSUM file
      is readily available on the mirror. This is seldom changed and
      any change here will update all eext snapshots.

      We wipe out the dnf/yum repo configuration in the tarball.
    entry:
      share-net: true
      mounts:
        - source: /etc/resolv.conf
          target: /etc/resolv.conf
          options: ro,bind
      mutables:
        - /var/cache
        - /var/lib/dnf
    units:
      - floor: .%internal/bootstrap/extract-floor
        entry:
          env:
            DNF_HOST: ${eext-dnf-host.url:-https://artifactory.infra.corp.arista.io/artifactory}
        sources: []
        build: |
          cd /var/work
          /extract/extract.bash /extract
          touch $DESTDIR/etc/resolv.conf

  internal/bootstrap/eext-repos-floor:
    description: |
      Alpine floor with the eext-repos src directory mapped in.
      gettext provides envsubst used by generate-repo-file.bash called from generate.bash
      rpm-dev provides rpmbuild used by generate.bash.
    entry:
      mutables:
        - /var/work
        - /var/tmp
    units:
      - image: barney.ci/alpine%pkg/alpine-base
      - image: barney.ci/alpine%pkg/bash
      - image: barney.ci/alpine%pkg/gettext
      - image: barney.ci/alpine%pkg/rpm-dev
      - image: barney.ci/alpine%apk-finalizers
      - build: |
          mkdir -p /dest/var/work
          cp -a bootstrap/eext-repos /dest
          cp -a pki/rpmkeys/alma9-b86b3716-gpg-pubkey.pem /dest/eext-repos
          cp -a pki/rpmkeys/epel9-3228467c-gpg-pubkey.pem /dest/eext-repos

  internal/bootstrap/eext-repos:
    no-create-mountpoints: true
    description: |
      Setup curated frozen dnf repo list for build reproducibility.
      There're two files, eext-repo-build.repo and eext-repo-devel.repo. These files are
      installed in /eext-repos directory.
      We also install the eext-repo-build.repo in /etc/yum.repos.d to be used for base image
      bootstrap.

      We also build an rpm each with the contents being the repo file,
      and instructions to install at /etc/yum.repos.d.
      The RPMs are named eext-repos-build and eext-repos-devel with approiate architecture
      and .rpm extensions. They are installed in /RPMS.
    units:
      - floor: .%internal/bootstrap/eext-repos-floor
        entry:
          env:
            DNF_HOST: ${eext-dnf-host.url:-https://artifactory.infra.corp.arista.io/artifactory}
        sources: []
        build: |
          cd /var/work
          /eext-repos/generate.bash /eext-repos

  internal/bootstrap/install-rpms:
    no-create-mountpoints: true
    description: |
      Setup install-rpm scripts and collaterals for bootstrapping
    units:
      - build: |
          cp -a bootstrap/install-rpms /dest

  internal/bootstrap/dnf-dirs:
    no-create-mountpoints: true
    description: |
      Setup empty directories needed by dnf
    units:
      - sources: []
        build: |
          mkdir -p /dest/var/lib/dnf
          chmod 755 /dest/var/lib/dnf

  internal/bootstrap:
    description: |
      Final bootstrap layer used as floor to build base images.
    units:
      - image: .%internal/bootstrap/dnf-dirs
      - image: .%internal/bootstrap/extract
      - image: .%internal/bootstrap/eext-repos
      - image: .%internal/bootstrap/install-rpms

  base-image-build:
    units:
      - floor: .%internal/bootstrap
        sources: []
        build: |
          echo "install rpms"
          /install-rpms/install-rpms.bash \
            --common-rpms-file /install-rpms/rpms-common \
            --extra-rpms-file /install-rpms/rpms-build

  base-image-devel:
    units:
      - floor: .%internal/bootstrap
        sources: []
        build: |
          /install-rpms/install-rpms.bash \
            --common-rpms-file /install-rpms/rpms-common \
            --extra-rpms-file /install-rpms/rpms-devel

  go-binaries:
    description: |
      This image is a copy of .%go/static, but with /usr/bin
      permissions changed to 0555, so that it can combine properly
      with redhat-style images.
    units:
      - mappings:
          /src/static: .%go/static
        build: |
          mkdir -p /dest/usr
          cp -a /src/static/usr/bin /dest/usr/bin
          chmod 555 /dest/usr/bin

  eext-configfiles:
    units:
      - build: |
          mkdir -p $DESTDIR/usr/share/eext
          cp -a ./configfiles/* $DESTDIR/usr/share/eext
          mkdir -p $DESTDIR/etc/pki/eext
          cp -a ./pki/* $DESTDIR/etc/pki/eext
          mkdir -p $DESTDIR/etc
          touch $DESTDIR/etc/resolv.conf

  eext:
    units:
      - image: .%base-image-build
      - image: .%go-binaries
      - image: .%eext-configfiles
      - build: |
          mkdir -p $DESTDIR/etc
          touch $DESTDIR/etc/resolv.conf

    entry:
      mutables: &eext-mutables
        - /var/eext
        - /var/cache
        - /var/lib/mock
        - /var/lib/rpm
        - /var/tmp
      mounts:
        - source: /etc/resolv.conf
          target: /etc/resolv.conf
          options: ro,bind
      # We need access to artifactory.infra.corp.arista.io
      # to make mock work
      share-net: true

  eext-testfloor:
    units:
      - image: .%go/modules
      - build: |
          mkdir -p /dest/var/cache/go
          mkdir -p /dest/var/ext
      - floor: .%internal/bootstrap
        sources: []
        build: |
          /install-rpms/install-rpms.bash \
            --common-rpms-file /install-rpms/rpms-common \
            --extra-rpms-file /install-rpms/rpms-devel
          touch $DESTDIR/etc/resolv.conf

    entry:
      env:
        GOCACHE: /tmp/gocache
        GOMODCACHE: /go/pkg/mod
      mutables: *eext-mutables
      mounts:
        - source: /etc/resolv.conf
          target: /etc/resolv.conf
          options: ro,bind
      # We need access to artifactory.infra.corp.arista.io
      # to make mock work
      share-net: true

  test/eext:
    units:
      - floor: .%eext-testfloor
        build: |
          go test code.arista.io/eos/tools/eext/dnfconfig
          go test code.arista.io/eos/tools/eext/srcconfig
          go test code.arista.io/eos/tools/eext/manifest
          go test code.arista.io/eos/tools/eext/impl
          go test code.arista.io/eos/tools/eext/cmd
          go test code.arista.io/eos/tools/eext/cmd -tags privileged
          go vet code.arista.io/eos/tools/eext/...
          test -z "$(gofmt -l .)"

  # go test runs on separate test-floor
  # so validate build here
  test/eext-build:
    units:
      - image: .%eext
