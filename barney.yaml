---
# yamllint disable rule:line-length
generators:
  go: barney.ci/golang%generator

images:

  internal/alma-9.1-bootstrap:
    units:
      - image: barney.ci/docker%image/docker.corp.arista.io/almalinuxorg/9-minimal//9.1-20230222
      - sources: []
        build: |
          mkdir -p /dest/etc
          touch /dest/etc/resolv.conf
    finalizers:
      - |
          echo '#!/bin/sh
          microdnf --assumeyes --installroot=/dest --noplugins --config=/etc/dnf/dnf.conf \
                   --setopt=cachedir=/var/cache/microdnf --setopt=reposdir=/etc/yum.repos.d \
                   --setopt=varsdir=/etc/dnf --releasever=9.1 install "$@"
          ' > /usr/bin/install-rpms
          chmod 755 /usr/bin/install-rpms
          rm -rf /etc/yum.repos.d
          mkdir -p /etc/yum.repos.d
          echo '[epel]
          baseurl=https://artifactory.infra.corp.arista.io/artifactory/centos-9-epel/x86_64/
          enabled=1
          gpgcheck=0
          ' > /etc/yum.repos.d/epel.repo
          echo '[BaseOS]
          baseurl=https://artifactory.infra.corp.arista.io/artifactory/alma-linux/9.1/BaseOS/x86_64/os/
          enabled=1
          ' > /etc/yum.repos.d/BaseOS.repo
          echo '[AppStream]
          baseurl=https://artifactory.infra.corp.arista.io/artifactory/alma-linux/9.1/AppStream/x86_64/os/
          enabled=1
          ' > /etc/yum.repos.d/AppStream.repo
          microdnf clean all # aajith
    entry:
      share-net: true
      mounts:
        - source: /etc/resolv.conf
          target: /etc/resolv.conf
          options: ro,bind
      mutables:
        - /var/cache
        - /var/lib/dnf
        # - /etc # aajith

  base-image:
    units:
      - floor: .%internal/alma-9.1-bootstrap
        sources: []
        build: |
          install-rpms coreutils rpm rpm-build rpmdevtools automake mock

  eext-buildfloor:
    units:
      - image: barney.ci/golang%toolchain
      - image: barney.ci/alpine%pkg/gawk
      - image: .%go/modules
    entry:
      mutables:
        - /usr

  eext-testfloor:
    units:
      - image: barney.ci/golang%toolchain
      - image: .%go/modules
      - image: .%base-image

  eext:
    units:
      - image: .%base-image
      - floor: .%eext-buildfloor
        build: |
          export COMMIT=$(echo $SRC_0 | awk -F '#' '{print substr($2, 1, 10)}')
          export PKG=code.arista.io/eos/tools/eext
          export LDFLAGS="-X ${PKG}.Version=${COMMIT}"
          go build -o eext -ldflags "${LDFLAGS}" code.arista.io/eos/tools/eext
          #mkdir -p $DESTDIR/usr/bin/
          #cp eext $DESTDIR/usr/bin/
          #chmod 755 $DESTDIR/usr/bin/eext
          mkdir -p $DESTDIR/usr/share/eext
          cp ./configfiles/*.* $DESTDIR/usr/share/eext/
          chmod 655 $DESTDIR/usr/share/eext/*.*

  eext-test:
    units:
      - floor: .%eext-testfloor
        build: |
          go test code.arista.io/eos/tools/eext/...
          go test code.arista.io/eos/tools/eext/... -tags privileged
