---
on:   # yamllint disable-line rule:truthy
  pull_request:
    branches:
      - 'main'

env:
  TEST_TAG: lemurbldr:test

jobs:
  gobuild:
    name: Go lint and build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v2.0.0
        with:
          # using recursive to avoid hardcoding paths
          # and missing any future additions
          recursive: true
          verbose: true

      - name: Lint yaml files
        run: yamllint .

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          # CentOS Stream 9 go  version
          go-version: '1.18.2'

      - name: Setup golint
        run: |
          cd extbldr
          GO111MODULE=off go get -u golang.org/x/lint/golint

      # Tests not run, because of deps
      # They are run in docker build
      - name: Run go build
        run: |
          cd extbldr
          go build .

      - name: Run golint, go vet and go fmt
        run: |
          cd extbldr
          golint -set_exit_status ./...
          go vet ./...
          test -z $(gofmt -l .)

  dockerbuild:
    name: Dockerfile build without publish

    # Run this only after gobuild succeeds
    needs: gobuild
    runs-on: ubuntu-latest
    steps:
      - name: Setup buildx with docker-container driver
        uses: docker/setup-buildx-action@v2

      - name: Docker build
        uses: docker/build-push-action@v3
        with:
          # Dockerfile is within subdirectory
          context: "{{defaultContext}}"
          file: extbldr/Dockerfile

          # GIT_AUTH_TOKEN is unset for non-default context
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.GITHUB_TOKEN }}

          load: true
          tags: ${{ env.TEST_TAG }}
          target: builder
      - name: Test privileged
        run: |
          docker run --rm --privileged \
          ${{ env.TEST_TAG }} sh -c 'go test ./... -tags=privileged'

      - name: Dockerfile build without publish
        uses: docker/build-push-action@v3
        with:
          # Dockerfile is within subdirectory
          context: "{{defaultContext}}"
          file: extbldr/Dockerfile
          platforms: linux/amd64,linux/arm64

          # GIT_AUTH_TOKEN is unset for non-default context
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.GITHUB_TOKEN }}
          # Publish is done by Arista docker-library to push to on-prem registry
          # This just checks the docker build and can work off-prem.
          target: deploy
          push: false
